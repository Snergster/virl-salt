#!/bin/bash
# Reorder kvm parameters so that sockets and ids come first
declare -a want=()
declare -a rest=()

# replace serial port bind adress to this value recognized by STD
PRIVATE=127.0.1.1
# get outside ip
OUTSIDE=`awk '/[[]serial_console[]]/ { my_flag = 1 ; } ; /^[ ]*proxyclient_address/ { if (my_flag) { print $3 ; exit ; } ; }' /etc/nova/nova.conf`
if [ -z "$OUTSIDE" -o "$OUTSIDE" == "0.0.0.0" ] ; then
    # fall back to address of interface with best default route
    OUTSIDE=`awk '{if ($2 == "00000000" && $8 == "00000000") { print $5 " " $1 ;}}' </proc/net/route |
             sort -n | sed -n '1{s/.* //p;Q}' |
             xargs -r ifconfig | sed -n 's/.*inet addr:\([0-9.]\+\).*/\1/p'`
fi

prev=none

# at least some value that would grep
ident=kvm 

for arg in "$@" ; do
    case $prev in
    -name)
        prev=none
        want+=("$arg")
        ;;
    -uuid)
        ident="$arg"
        prev=none
        want+=("$arg")
        ;;
    -chardev)
        # check if we need to front this socket
        port=`echo "$arg" | sed -n '/charserial/s/.*port=\([0-9]\+\).*/\1/p'`
        if [ -n "$port" -a -n "$OUTSIDE" ] ; then
            arg=`echo "$arg" | sed "s/host=[0-9.]*/host=$PRIVATE/"`
            telnet_front "$PRIVATE" "$OUTSIDE" "$port" $$ $ident &
        fi

        prev=none
        want+=("$arg")
        ;;
    *)
        case "$arg" in
            -name|-uuid|-chardev)
                want+=("$arg")
                prev=$arg
            ;;
            *)
                rest+=("$arg")
            ;;
        esac
    esac
done
exec kvm.real "${want[@]}" "${rest[@]}"

