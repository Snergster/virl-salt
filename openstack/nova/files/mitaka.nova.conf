{% from "virl.jinja" import virl with context %}
[DEFAULT]
dhcpbridge = {{ salt['pillar.get']('nova:dhcpbridge', '/usr/bin/nova-dhcpbridge') }}
dhcpbridge_flagfile = {{ salt['pillar.get']('nova:dhcpbridge_flagfile', '/etc/nova/nova.conf') }}
log-dir = {{ salt['pillar.get']('nova:logdir', '/var/log/nova') }}

state_path = {{ salt['pillar.get']('nova:state_path', '/var/lib/nova') }}
lock_path = {{ salt['pillar.get']('nova:lock_path', '/var/lock/nova') }}
force_dhcp_release = {{ salt['pillar.get']('nova:force_dhcp_release', 'True') }}
iscsi_helper = {{ salt['pillar.get']('nova:iscsi_helper', 'tgtadm') }}

sql_connection = mysql://nova:{{ salt['pillar.get']('virl:mysql_password', salt['grains.get']('mysql_password', 'password'))}}@{{salt['pillar.get']('virl:internalnet_controller_ip',salt['grains.get']('internalnet_controller_ip', '172.16.10.250'))}}/nova

libvirt_use_virtio_for_bridges=True

connection_type = {{ salt['pillar.get']('nova:connection_type', 'libvirt') }}
root_helper = {{ salt['pillar.get']('nova:root_helper', 'sudo nova-rootwrap /etc/nova/rootwrap.conf') }}

debug = {{salt['pillar.get']('virl:debug', salt['grains.get']('debug', False)) }}

firewall_driver = {{ salt['pillar.get']('nova:firewall_driver', 'nova.virt.firewall.NoopFirewallDriver') }}
rpc_backend = {{ salt['pillar.get']('nova:rpc_backend', 'rabbit') }}
auth_strategy = {{ salt['pillar.get']('nova:auth_strategy', 'keystone') }}

ec2_workers = 1
metadata_workers = 1
osapi_compute_workers = 10
ec2_private_dns_show_ip=True
api_paste_config=/etc/nova/api-paste.ini
volumes_path=/var/lib/nova/volumes
enabled_apis=osapi_compute,metadata

use_neutron = True
network_api_class = nova.network.neutronv2.api.API
neutron_url = http://{{ salt['pillar.get']('virl:internalnet_controller_ip', salt['grains.get']('hostname', '172.16.10.250')) }}:9696
neutron_auth_strategy = keystone
neutron_admin_tenant_name = service
neutron_admin_username = neutron
neutron_admin_password = {{salt['pillar.get']('virl:password', salt['grains.get']('password', 'password')) }}
neutron_admin_auth_url = http://{{ salt['pillar.get']('virl:internalnet_controller_ip', salt['grains.get']('hostname', '172.16.10.250')) }}:35357/{{ virl.keystone_auth_version }}
security_group_api = nova

#Hey raaabbbit!
rabbit_host = {{ salt['pillar.get']('virl:internalnet_controller_ip', salt['grains.get']('hostname', '172.16.10.250')) }}
rabbit_password = {{salt['pillar.get']('virl:password', salt['grains.get']('password', 'password')) }}

my_ip = {{  salt['pillar.get']('virl:internalnet_ip', salt['grains.get']('static_ip', '127.0.0.1' )) }}

#vnc section
vncserver_listen = {{  salt['pillar.get']('virl:static_ip', salt['grains.get']('static_ip', '127.0.0.1' )) }}
vncserver_proxyclient_address = {{  salt['pillar.get']('virl:static_ip', salt['grains.get']('static_ip', '127.0.0.1' )) }}
novncproxy_port = {{ salt['pillar.get']('virl:vnc_port', salt['grains.get']('vnc_port', 19407)) }}
novncproxy_base_url = http://127.0.1.1:{{ salt['pillar.get']('virl:vnc_port', salt['grains.get']('vnc_port', '19407')) }}/vnc_auto.html

scheduler_default_filters= {{  salt['pillar.get']('virl:nova_filter', salt['grains.get']('nova_filter', 'AllHostsFilter' )) }}

quota_instances=100
quota_cores=30
quota_injected_files = 100

vif_plugging_timeout = 0

[oslo_middleware]
max_request_body_size = 10000000

[keystone_authtoken]

project_domain_id = default
user_domain_id = default
auth_uri = http://{{ salt['pillar.get']('virl:internalnet_controller_ip', salt['grains.get']('hostname', '172.16.10.250')) }}:5000
auth_url = http://{{ salt['pillar.get']('virl:internalnet_controller_ip', salt['grains.get']('hostname', '172.16.10.250')) }}:35357
auth_plugin = password
project_name = service
username = nova
password = {{salt['pillar.get']('virl:password', salt['grains.get']('password', 'password')) }}


[database]
connection = mysql://nova:{{ salt['pillar.get']('virl:mysql_password', salt['grains.get']('mysql_password', 'password'))}}@{{salt['pillar.get']('virl:internalnet_controller_ip',salt['grains.get']('internalnet_controller_ip', '172.16.10.250'))}}/nova

[conductor]
workers = 1

[libvirt]
vif_driver = nova.virt.libvirt.vif.LibvirtGenericVIFDriver
inject_partition = -2
use_usb_tablet = False
cpu_mode = {{ salt['pillar.get']('virl:libvirt_cpu_mode', salt['grains.get']('libvirt_cpu_mode', 'none')) }}
virt_type = kvm
#serial_port_range = {{salt['pillar.get']('virl:start_of_serial_port_range', salt['grains.get']('start_of_serial_port_range', '17000'))}}:{{ salt['pillar.get']('virl:end_of_serial_port_range', salt['grains.get']('end_of_serial_port_range', '18000')) }}

[spice]
enabled = false

[api_database]
connection = mysql+pymysql://nova_api:{{ salt['pillar.get']('virl:mysql_password', salt['grains.get']('mysql_password', 'password'))}}@{{salt['pillar.get']('virl:internalnet_controller_ip',salt['grains.get']('internalnet_controller_ip', '172.16.10.250'))}}/nova_api

[neutron]
auth_type = password
project_name = service
username = neutron
password = {{salt['pillar.get']('virl:password', salt['grains.get']('password', 'password')) }}
auth_url = http://{{ salt['pillar.get']('virl:internalnet_controller_ip', salt['grains.get']('hostname', '172.16.10.250')) }}:35357/{{ virl.keystone_auth_version }}
auth_url = http://virl:35357/{{ virl.keystone_auth_version }}
auth_protocol = http

[serial_console]
proxyclient_address = 0.0.0.0
serialproxy_host = 0.0.0.0
serialproxy_port = {{ salt['pillar.get']('virl:serial_port', salt['grains.get']('serial_port', '19406')) }}
target_host = 0.0.0.0
#base_url = http://127.0.1.1:6083/serial.html
base_url = http://127.0.1.1:{{ salt['pillar.get']('virl:serial_port', salt['grains.get']('serial_port', '19406')) }}/serial.html
port_range = {{salt['pillar.get']('virl:start_of_serial_port_range', salt['grains.get']('start_of_serial_port_range', '17000'))}}:{{ salt['pillar.get']('virl:end_of_serial_port_range', salt['grains.get']('end_of_serial_port_range', '18000')) }}
enabled = True

[glance]

