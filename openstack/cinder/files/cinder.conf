[DEFAULT]
logdir = {{ salt['pillar.get']('cinder:logdir', '/var/log/cinder') }}
state_path = {{ salt['pillar.get']('cinder:state_path', '/var/lib/cinder') }}
lock_path = {{ salt['pillar.get']('cinder:lock_path', '/var/lock/cinder') }}
volumes_dir = {{ salt['pillar.get']('cinder:volumes_dir', '/var/lib/cinder/volumes') }}
iscsi_helper = {{ salt['pillar.get']('cinder:iscsi_helper', 'tgtadm') }} # Platform detect if this varies based on platform
sql_connection = mysql://cinder:{{ salt['pillar.get']('virl:mysql_password', salt['grains.get']('mysql_password', 'password')) }}@{{ salt['pillar.get']('virl:internalnet_controller_IP',salt['grains.get']('internalnet_controller_ip', '172.16.10.250')) }}/cinder
rpc_backend = rabbit
rootwrap_config = {{ salt['pillar.get']('cinder:rootwrap_config', '/etc/cinder/rootwrap.conf') }}
verbose = False
debug = False
api_paste_confg = /etc/cinder/api-paste.ini
volume_group = cinder-volumes
volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
volume_name_template = volume-%s
auth_strategy = keystone
osapi_volume_workers = 2
osapi_volume_listen = 0.0.0.0
glance_api_servers = http://virl:9292

glance_host = {{ salt['pillar.get']('virl:hostname', salt['grains.get']('hostname', 'virl')) }}
enabled_backends = lvm
os_region_name = RegionOne
enable_v1_api = true
periodic_interval = 60

{% if grains['os_family'] == 'Debian' %}
rabbit_host = {{ salt['pillar.get']('virl:hostname', salt['grains.get']('hostname', 'virl')) }}
rabbit_port = {{ salt['pillar.get']('cinder:rabbit_port', '5672') }}
rabbit_userid = {{ salt['pillar.get']('cinder:rabbit_userid', 'guest') }}
rabbit_password = {{ salt['pillar.get']('virl:rabbitpassword', salt['grains.get']('password', 'password')) }}
{% elif grains['os_family'] == 'RedHat' %}
qpid_hostname = {{ salt['pillar.get']('cinder:qpid_hostname', 'localhost') }}
rabbit_virtual_host = {{ salt['pillar.get']('virl:hostname', salt['grains.get']('hostname', 'virl')) }}
{% endif %}

[lvm]
iscsi_helper = tgtadm # Platform detect if this varies based on platform
volume_group = cinder-volumes
volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver

[keystone_authtoken]
admin_tenant_name = {{ salt['pillar.get']('cinder:admin_tenant_name', 'service') }}
admin_user = {{ salt['pillar.get']('cinder:admin_user', 'cinder') }}
admin_password = {{ salt['pillar.get']('virl:password', salt['grains.get']('password', 'password')) }}
auth_host = {{ salt['pillar.get']('virl:hostname', salt['grains.get']('hostname', 'virl')) }}
auth_port = {{ salt['pillar.get']('cinder:auth_port', '35357') }}
auth_uri = http://{{ salt['pillar.get']('virl:hostname', salt['grains.get']('hostname', 'virl')) }}:5000/v2.0
auth_protocol = {{ salt['pillar.get']('cinder:auth_protocol', 'http') }}
signing_dirname = {{ salt['pillar.get']('cinder:signing_dirname', '$state_path/keystone-signing') }}

[database]
connection = mysql://cinder:{{ salt['pillar.get']('mysql_virl:password', salt['grains.get']('mysql_password', 'password')) }}@{{ salt['pillar.get']('virl:internalnet_controller_IP',salt['grains.get']('internalnet_controller_ip', '172.16.10.250')) }}/cinder
